# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Book(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, title: str=None, author: str=None, genre: str=None, published_year: int=None):  # noqa: E501
        """Book - a model defined in Swagger

        :param id: The id of this Book.  # noqa: E501
        :type id: int
        :param title: The title of this Book.  # noqa: E501
        :type title: str
        :param author: The author of this Book.  # noqa: E501
        :type author: str
        :param genre: The genre of this Book.  # noqa: E501
        :type genre: str
        :param published_year: The published_year of this Book.  # noqa: E501
        :type published_year: int
        """
        self.swagger_types = {
            'id': int,
            'title': str,
            'author': str,
            'genre': str,
            'published_year': int
        }

        self.attribute_map = {
            'id': 'id',
            'title': 'title',
            'author': 'author',
            'genre': 'genre',
            'published_year': 'published_year'
        }
        self._id = id
        self._title = title
        self._author = author
        self._genre = genre
        self._published_year = published_year

    @classmethod
    def from_dict(cls, dikt) -> 'Book':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Book of this Book.  # noqa: E501
        :rtype: Book
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Book.

        Id of the book  # noqa: E501

        :return: The id of this Book.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Book.

        Id of the book  # noqa: E501

        :param id: The id of this Book.
        :type id: int
        """

        self._id = id

    @property
    def title(self) -> str:
        """Gets the title of this Book.

        Title of the book  # noqa: E501

        :return: The title of this Book.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this Book.

        Title of the book  # noqa: E501

        :param title: The title of this Book.
        :type title: str
        """

        self._title = title

    @property
    def author(self) -> str:
        """Gets the author of this Book.

        Author of the book  # noqa: E501

        :return: The author of this Book.
        :rtype: str
        """
        return self._author

    @author.setter
    def author(self, author: str):
        """Sets the author of this Book.

        Author of the book  # noqa: E501

        :param author: The author of this Book.
        :type author: str
        """

        self._author = author

    @property
    def genre(self) -> str:
        """Gets the genre of this Book.

        Genre of the book  # noqa: E501

        :return: The genre of this Book.
        :rtype: str
        """
        return self._genre

    @genre.setter
    def genre(self, genre: str):
        """Sets the genre of this Book.

        Genre of the book  # noqa: E501

        :param genre: The genre of this Book.
        :type genre: str
        """

        self._genre = genre

    @property
    def published_year(self) -> int:
        """Gets the published_year of this Book.

        Year the book was published  # noqa: E501

        :return: The published_year of this Book.
        :rtype: int
        """
        return self._published_year

    @published_year.setter
    def published_year(self, published_year: int):
        """Sets the published_year of this Book.

        Year the book was published  # noqa: E501

        :param published_year: The published_year of this Book.
        :type published_year: int
        """

        self._published_year = published_year
