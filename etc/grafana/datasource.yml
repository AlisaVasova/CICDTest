# config file version
apiVersion: 1

# list of datasources that should be deleted from the database
deleteDatasources:
  - name: Prometheus
    orgId: 1
  - name: Loki
    orgId: 1
  - name: Tempo
    orgId: 1

# list of datasources to insert/update depending
# what's available in the database
datasources:
  # <string, required> name of the datasource. Required
  - name: Prometheus
    # <string, required> datasource type. Required
    type: prometheus
    # <string, required> access mode. proxy or direct (Server or Browser in the UI). Required
    access: proxy
    # <int> org id. will default to orgId 1 if not specified
    orgId: 1
    # <string> custom UID which can be used to reference this datasource in other parts of the configuration, if not specified will be generated automatically
    # uid: my_unique_uid
    # <string> url
    url: http://prometheus:9090
    # <string> Deprecated, use secureJsonData.password
    password:
    # <string> database user, if used
    user:
    # <string> database name, if used
    database:
    # <bool> enable/disable basic auth
    basicAuth:
    # <string> basic auth username
    basicAuthUser:
    # <string> Deprecated, use secureJsonData.basicAuthPassword
    basicAuthPassword:
    # <bool> enable/disable with credentials headers
    withCredentials:
    # <bool> mark as default datasource. Max one per org
    isDefault: true
    # <map> fields that will be converted to json and stored in jsonData
    jsonData:
      httpMethod: GET
    #   graphiteVersion: '1.1'
    #   tlsAuth: false
    #   tlsAuthWithCACert: false
    # <string> json object of data that will be encrypted.
    # secureJsonData:
    #   tlsCACert: '...'
    #   tlsClientCert: '...'
    #   tlsClientKey: '...'
    #   # <string> database password, if used
    #   password:
    #   # <string> basic auth password
    #   basicAuthPassword:
    version: 1
    # <bool> allow users to edit datasources from the UI.
    editable: false

  - name: Loki # Отображаемое имя нашего источника данных
    type: loki # Тип источника
    access: proxy #
    orgId: 1 # Идентификатор организации (единица адм. деления в Grafana) которой будет доступен источник
    url: http://loki:3100 # Адрес откуда получать данные (здесь мы используем имя сервиса loki, т. к. компоуз создаст свою сеть в которой к контейнерам можно обращаться по имени compose-сервиса)
    basicAuth: false # Для удобства демонстрации в Loki отключена авторизация, поэтому и тут она не зачем
    isDefault: false #
    version: 1 #
    jsonData:
      derivedFields:
        - datasourceName: Tempo
          datasourceUid: tempo
          matcherRegex: (?:traceID|trace_id)=(\w+)
          name: traceId
          url: $${__value.raw}
    editable: true # Зпретим редактирование через интерфейс Grafana

  - name: Tempo # Отображаемое имя нашего источника данных
    type: tempo # Тип источника
    uid: tempo
    access: proxy #
    orgId: 1 # Идентификатор организации (единица адм. деления в Grafana) которой будет доступен источник
    url: http://tempo:3200 # Адрес откуда получать данные (здесь мы используем имя сервиса loki, т. к. компоуз создаст свою сеть в которой к контейнерам можно обращаться по имени compose-сервиса)
    basicAuth: false # Для удобства демонстрации в Loki отключена авторизация, поэтому и тут она не зачем
    isDefault: false #
    version: 1 #
    jsonData:
      tracesToLogs:
        datasourceUid: loki
        filterByTraceID: false
        spanEndTimeShift: "500ms"
        spanStartTimeShift: "-500ms"
        tags: ['beast']
    editable: true # Зпретим редактирование через интерфейс Grafana
